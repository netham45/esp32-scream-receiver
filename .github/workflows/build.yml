name: Build ESP32 Scream Receiver

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

# Add permissions needed for creating releases
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [esp32_spdif, esp32s3_usb, esp32s3_spdif]
        include:
          - target: esp32_spdif
            board: esp32
            name: "ESP32 (SPDIF)"
            config_define: IS_SPDIF
          - target: esp32s3_usb
            board: esp32s3
            name: "ESP32-S3 (USB)"
            config_define: IS_USB
          - target: esp32s3_spdif
            board: esp32s3
            name: "ESP32-S3 (SPDIF)"
            config_define: IS_SPDIF

    name: Build ${{ matrix.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize submodules
        run: |
          git submodule init
          git submodule update
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
        
      - name: Configure project
        run: |
          # Modify the config.h file to enable appropriate target
          # First disable both targets
          sed -i 's/^#define IS_SPDIF/\/\/#define IS_SPDIF/' main/config.h
          sed -i 's/^#define IS_USB/\/\/#define IS_USB/' main/config.h
          # Then enable the correct target
          sed -i 's/^\/\/#define '${{ matrix.config_define }}'/#define '${{ matrix.config_define }}'/' main/config.h
          
          # Copy the default configuration
          if [ -f sdkconfig.${{matrix.target}} ]; then
            cp sdkconfig.${{matrix.target}} sdkconfig
          fi

      - name: Install ESP-IDF
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: 'v5.4'
          target: ${{ matrix.board }}
          
      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ matrix.target }}
          path: |
            build/esp32-scream-receiver.bin
            build/*.bin
            build/*.elf
            build/bootloader/bootloader.bin
            build/partition_table/partition-table.bin
          retention-days: 7
          
  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code for commit info
        uses: actions/checkout@v4

      - name: Get short commit hash
        id: commit
        run: echo "short_hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create release zip files
        run: |
          # Create zip files with commit hash in the name
          zip -r esp32-spdif-${{ steps.commit.outputs.short_hash }}.zip firmware-esp32_spdif/
          zip -r esp32s3-usb-${{ steps.commit.outputs.short_hash }}.zip firmware-esp32s3_usb/
          zip -r esp32s3-spdif-${{ steps.commit.outputs.short_hash }}.zip firmware-esp32s3_spdif/
      
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: build-${{ steps.commit.outputs.short_hash }}
          name: Build ${{ steps.commit.outputs.short_hash }}
          artifacts: |
            esp32-spdif-${{ steps.commit.outputs.short_hash }}.zip
            esp32s3-usb-${{ steps.commit.outputs.short_hash }}.zip
            esp32s3-spdif-${{ steps.commit.outputs.short_hash }}.zip
          draft: false
          prerelease: false
          generateReleaseNotes: true
          skipIfReleaseExists: true
