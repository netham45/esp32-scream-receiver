name: Build ESP32 Scream Receiver

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [esp32, esp32s3]
        include:
          - target: esp32
            name: "ESP32 (SPDIF)"
            config_define: IS_SPDIF
          - target: esp32s3
            name: "ESP32-S3 (USB)"
            config_define: IS_USB

    name: Build ${{ matrix.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install ESP-IDF
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: 'v5.4'
          target: ${{ matrix.target }}
        
      - name: Configure project
        run: |
          # Create a temporary config.h file with appropriate define
          cat > main/config.h.tmp << EOF
          #ifndef _CONFIG_H_
          #define _CONFIG_H_

          // Target configuration
          #define ${{ matrix.config_define }}

          #endif // _CONFIG_H_
          EOF
          
          # Replace the existing config.h file
          mv main/config.h.tmp main/config.h
          
          # Configure project for target
          idf.py set-target ${{ matrix.target }}
          
      - name: Build project
        run: idf.py build
          
      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v3
        with:
          name: firmware-${{ matrix.target }}
          path: |
            build/esp32-scream-receiver.bin
            build/*.bin
            build/*.elf
            build/bootloader/bootloader.bin
            build/partition_table/partition-table.bin
          retention-days: 7
          
  create-release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        
      - name: Create release zip files
        run: |
          zip -r esp32-firmware.zip firmware-esp32/
          zip -r esp32-s3-firmware.zip firmware-esp32s3/
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            esp32-firmware.zip
            esp32-s3-firmware.zip
          draft: false
          prerelease: false
